-- Photos that have tags attached
CREATE PROCEDURE photoSetTags (parm_site_id INT, parm_tag_id INT, parm_limit INT, parm_offset INT)
BEGIN

SET @ste = parm_site_id;
SET @lmt = parm_limit;
SET @off = parm_offset;
SET @tag = parm_tag_id;

SET @sql = "SELECT p.photo_id, p.user_id, p.take_dt, p.server_id, p.photo_uid, 
    p.caption, p.description, p.orig_size, p.orig_height, p.orig_width, p.mime, 
    p.ext, p.private, p.complete, p.uploaded_dt, u.full_name, 
    u.common_name, u.avatar_id, COUNT(c.comment_id) AS comments, pt.updated_dt
    FROM photo p 
    INNER JOIN user_name u 
        ON u.user_id=p.user_id 
    LEFT OUTER JOIN photo_comment c 
        ON p.photo_id=c.photo_id 
        AND c.site_id=? -- site
    INNER JOIN photo_tag pt 
        ON pt.tag_id=? -- tag
        AND p.photo_id=pt.photo_id 
    INNER JOIN site_member sm
        ON sm.user_id=pt.user_id
        AND sm.site_id=? -- site
    WHERE p.complete=1 
    GROUP BY p.photo_id
    ORDER BY pt.updated_dt DESC";

SET @sql = CONCAT(@sql, ' LIMIT ', @lmt);
SET @sql = CONCAT(@sql, ' OFFSET ', @off);

PREPARE STMT FROM @sql;
EXECUTE STMT USING @ste, @tag, @ste;	
END;

-- call photoSetTags(1, 1, 50, 0)
-- DROP PROCEDURE photoSetTags