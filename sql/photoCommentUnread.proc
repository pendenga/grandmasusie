-- Photos or Photo Comments that are unread
CREATE PROCEDURE unseenPhotoComment (parm_user_id INT, parm_limit INT, parm_offset INT)
BEGIN
	SELECT p.photo_id, p.user_id, p.take_dt, p.server_id, p.photo_uid, p.caption, 
	p.description, p.orig_size, p.orig_height, p.orig_width, p.mime, p.ext, 
	p.private, p.complete, p.uploaded_dt, u.first_name, u.last_name, u.avatar_id, 
	count(c.photo_id) AS comments, max(c.updated_dt) AS newest 
	FROM photo p 
	INNER JOIN photo_comment c 
	    ON c.photo_id=p.photo_id 
	    AND c.user_id!=parm_user_id
	INNER JOIN users u 
	    ON p.user_id=u.user_id 
	LEFT OUTER JOIN photo_view v 
	    ON c.photo_id=v.photo_id 
	    AND v.user_id=parm_user_id
	WHERE (c.updated_dt>'2007-5-10' 
	    AND v.updated_dt IS NULL 
	    OR v.updated_dt<c.updated_dt)
	    OR (p.uploaded_dt>'2007-5-10'
	    AND v.updated_dt IS NULL
	    AND p.user_id!=parm_user_id)
	GROUP BY c.photo_id 
	ORDER BY max(c.updated_dt) DESC
	LIMIT parm_limit
	OFFSET parm_offset
END

CREATE PROCEDURE unseenPhotoCount (parm_user_id INT)
BEGIN
	SELECT count(distinct p.photo_id)
	FROM photo p 
	INNER JOIN photo_comment c 
	    ON c.photo_id=p.photo_id 
	    AND c.user_id!=parm_user_id
	INNER JOIN users u 
	    ON p.user_id=u.user_id 
	LEFT OUTER JOIN photo_view v 
	    ON c.photo_id=v.photo_id 
	    AND v.user_id=parm_user_id
	WHERE (c.updated_dt>'2007-5-10' 
	    AND v.updated_dt IS NULL 
	    OR v.updated_dt<c.updated_dt)
	    OR (p.uploaded_dt>'2007-5-10'
	    AND v.updated_dt IS NULL
	    AND p.user_id!=parm_user_id)
	ORDER BY max(c.updated_dt) DESC;
END

-- call unseenPhotoComment(12)
-- call unseenPhotoCount(12)
-- DROP PROCEDURE photoCommentUnread

